@page "/projecttype/delete/{Id:int}/{Description}"

<h3>Delete Project Type</h3>
<br />

<div class="col-lg-6">
    <h4>Do you want to delete this project type?</h4>
    <hr />
    <div class="mb-3 row g-3">
        <h6 style="font-size:xx-large" class="col-7 col-form-label">@Description</h6>
    </div>
    <div class="row gx-5">
        <button type="submit" class="col-sm-12 col-6 btn btn-danger" @onclick="(async () => await RemoveProjectType(projectType))">Delete</button>
        <div>&nbsp</div>
        <button type="submit" class="col-sm-12 col-6 btn btn-warning" @onclick="Cancel">Cancel</button>
    </div>
</div>
<br />

@code {
    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public string Description { get; set; }
    ProjectType projectType = new ProjectType();
    [CascadingParameter]
    protected User currentUser { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Só os admins podem aceder
        if (currentUser.IsAdmin == true && currentUser.isActive == true)
        {
             projectType = await projecttypeService.GetById(Id);
        }
        else
        {
            _navigationManager.NavigateTo("/");
            return;
        }
    }

    protected async Task RemoveProjectType(ProjectType projectType)
    {
        await projecttypeService.Delete(projectType);
        await JsRuntime.InvokeVoidAsync("alert", "Project Type " + projectType.Description + " was sucessfully deleted!");
        _navigationManager.NavigateTo("/AllProjectTypes");
    }
    void Cancel()
    {
        _navigationManager.NavigateTo("/AllProjectTypes");
    }
}